/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package GUI;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.PLAIN_MESSAGE;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import logic.Email;

/**
 *
 * @author user
 */
public class Search1 extends javax.swing.JFrame {
        PreparedStatement ps=null;   

static final String JDBC_DRIVER = "com.mysql.jdbc.Driver"; // use specific driver for your database
    static final String DB_URL = "jdbc:mysql://localhost:3306/db_resume";
    // Database credentials
    static final String USER = "root";
    static final String PASS = "";
    Connection conn = null;
    Statement stmt = null;
    static Vector<Vector<String>> data = new Vector<Vector<String>>();
public static String Email = null;
    Connection con = null;
    PreparedStatement preparedStatement = null;
    static String Q;
    static String Be_cgpa;
    static String Be_stream;
    static String Trained_lang;
    static String Hss_marks;
    static String Sss_marks;
    static String Sss_stream;
    static String Mba_cgpa;
    static String Mba_specialisation;
    static String Grad_cgpa;
    static String Grad_stream;
    /**
     * Creates new form Search1
     */
    public Search1() {
        initComponents();
        this.getContentPane().setBackground(new Color(0,0,0));
                     this.setLocationRelativeTo(null);
                     BE.setBackground(new Color(0,0,0));
        MBA.setBackground(new Color(0,0,0));
        C12.setBackground(new Color(0,0,0));
                     setConnections();
        MBA.setVisible(false);
        BE.setVisible(false);
        C12.setVisible(false);
        Graduation.setVisible(false);
        C12_1.setVisible(false);
        BE_1.setVisible(false);
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        q = new javax.swing.JComboBox();
        search = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        BE = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        be_cgpa = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        be_stream = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        be_search = new javax.swing.JCheckBox();
        C12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        hss_marks = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        sss_marks = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cs_search = new javax.swing.JCheckBox();
        Graduation = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        grad_cgpa = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        grad_degree = new javax.swing.JComboBox();
        MBA = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        mba_cgpa = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        mba_special = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        mba_search = new javax.swing.JCheckBox();
        BE_1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        trained_lang = new javax.swing.JComboBox();
        C12_1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        sss_stream = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Qualification of the candidate:");

        q.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BE", "Class 12", "MBA" }));
        q.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qActionPerformed(evt);
            }
        });

        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Click for more Detailed Search");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("BE CGPA > or =");

        be_cgpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                be_cgpaActionPerformed(evt);
            }
        });
        be_cgpa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                be_cgpaKeyReleased(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("BE Stream:");

        be_stream.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MECH", "CSE", "IT", "CIVIL", "ELEC", "CHEM" }));
        be_stream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                be_streamActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Click for more Detailed Search");

        be_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                be_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BELayout = new javax.swing.GroupLayout(BE);
        BE.setLayout(BELayout);
        BELayout.setHorizontalGroup(
            BELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BELayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BELayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(be_cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BELayout.createSequentialGroup()
                        .addGroup(BELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(be_search, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(be_stream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        BELayout.setVerticalGroup(
            BELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BELayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(be_cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(BELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(be_stream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BELayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(be_search)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("HSS Marks(in %) > or =");

        hss_marks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hss_marksActionPerformed(evt);
            }
        });
        hss_marks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                hss_marksKeyReleased(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("SSS Marks(in %) > or =");

        sss_marks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sss_marksActionPerformed(evt);
            }
        });
        sss_marks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sss_marksKeyReleased(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Click for more Detailed Search");

        cs_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cs_searchActionPerformed(evt);
            }
        });

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Graduation CGPA:");

        grad_cgpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grad_cgpaActionPerformed(evt);
            }
        });
        grad_cgpa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                grad_cgpaKeyReleased(evt);
            }
        });

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Graduation Degree:");

        grad_degree.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BTech", "BE", "BA", "BCom", " " }));
        grad_degree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grad_degreeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout GraduationLayout = new javax.swing.GroupLayout(Graduation);
        Graduation.setLayout(GraduationLayout);
        GraduationLayout.setHorizontalGroup(
            GraduationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraduationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GraduationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GraduationLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(grad_cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(GraduationLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(grad_degree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        GraduationLayout.setVerticalGroup(
            GraduationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GraduationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(GraduationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grad_cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(GraduationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grad_degree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout C12Layout = new javax.swing.GroupLayout(C12);
        C12.setLayout(C12Layout);
        C12Layout.setHorizontalGroup(
            C12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(C12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(C12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(C12Layout.createSequentialGroup()
                        .addComponent(cs_search, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11))
                    .addGroup(C12Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(hss_marks, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(C12Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sss_marks, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, C12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Graduation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        C12Layout.setVerticalGroup(
            C12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(C12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(C12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hss_marks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(C12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sss_marks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(C12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cs_search)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Graduation, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("MBA CGPA > or =");

        mba_cgpa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mba_cgpaActionPerformed(evt);
            }
        });
        mba_cgpa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mba_cgpaKeyReleased(evt);
            }
        });

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("MBA Specialisation:");

        mba_special.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Finance", "Marketing", "Human Resources", "International Business", "Operations", "Information Technology", "Supply Chain Management", "Rural Management", "Agri Business Management", "Health Care Management" }));
        mba_special.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mba_specialActionPerformed(evt);
            }
        });

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Click for more Detailed Search");

        mba_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mba_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MBALayout = new javax.swing.GroupLayout(MBA);
        MBA.setLayout(MBALayout);
        MBALayout.setHorizontalGroup(
            MBALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MBALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MBALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MBALayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mba_special, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(MBALayout.createSequentialGroup()
                        .addGroup(MBALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(MBALayout.createSequentialGroup()
                                .addComponent(mba_search, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15))
                            .addGroup(MBALayout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(mba_cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(35, Short.MAX_VALUE))))
        );
        MBALayout.setVerticalGroup(
            MBALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MBALayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MBALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mba_cgpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(MBALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mba_special, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(MBALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mba_search)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Trained Language:");

        trained_lang.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Core Java", "Asp.Net", "PHP", "Android Development", "Database", " " }));
        trained_lang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trained_langActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BE_1Layout = new javax.swing.GroupLayout(BE_1);
        BE_1.setLayout(BE_1Layout);
        BE_1Layout.setHorizontalGroup(
            BE_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BE_1Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trained_lang, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        BE_1Layout.setVerticalGroup(
            BE_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BE_1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(BE_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trained_lang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Microsoft YaHei", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("SSS Stream:");

        sss_stream.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Arts", "Commerce", "Medical", "Non Medical" }));
        sss_stream.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sss_streamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout C12_1Layout = new javax.swing.GroupLayout(C12_1);
        C12_1.setLayout(C12_1Layout);
        C12_1Layout.setHorizontalGroup(
            C12_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(C12_1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(sss_stream, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );
        C12_1Layout.setVerticalGroup(
            C12_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(C12_1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(C12_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sss_stream, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/continue.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hire.png"))); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(283, 283, 283)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(search)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(109, 109, 109)
                                        .addComponent(C12_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(38, 38, 38)
                                .addComponent(MBA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BE_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(C12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel18)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel18)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(MBA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(search)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BE_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(C12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(C12_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void setConnections()
    {
        try
        {
            Class.forName("com.mysql.jdbc.Driver");
 con= DriverManager.getConnection("jdbc:mysql://localhost:3306/db_resume","root","");
            System.out.println("connection created");
        }
        catch(Exception e)
	{
  JOptionPane.showMessageDialog(null, e.toString(), "No Internet Connection",
                                    JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void qActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        String Q = (String) q.getSelectedItem();
        if(search.isSelected())
        {
            if(Q=="BE")
            {
                BE.setVisible(true);
            }
            else if(Q=="Class 12")
            {
                C12.setVisible(true);
            }
            else if(Q=="MBA")
            {
                MBA.setVisible(true);
            }
        }
    }//GEN-LAST:event_searchActionPerformed

    private void be_cgpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_be_cgpaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_be_cgpaActionPerformed

    private void be_cgpaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_be_cgpaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_be_cgpaKeyReleased

    private void be_streamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_be_streamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_be_streamActionPerformed

    private void be_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_be_searchActionPerformed
        // TODO add your handling code here:
        if(be_search.isSelected())
        {
            BE_1.setBackground(new Color(0,0,0));
                BE_1.setVisible(true);
        }
    }//GEN-LAST:event_be_searchActionPerformed

    private void trained_langActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trained_langActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_trained_langActionPerformed

    private void hss_marksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hss_marksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hss_marksActionPerformed

    private void hss_marksKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_hss_marksKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_hss_marksKeyReleased

    private void sss_marksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sss_marksActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sss_marksActionPerformed

    private void sss_marksKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sss_marksKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_sss_marksKeyReleased

    private void cs_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cs_searchActionPerformed
        // TODO add your handling code here:
        if(cs_search.isSelected())
        {
            C12_1.setBackground(new Color(0,0,0));
                C12_1.setVisible(true);
        }
    }//GEN-LAST:event_cs_searchActionPerformed

    private void sss_streamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sss_streamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sss_streamActionPerformed

    private void mba_cgpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mba_cgpaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mba_cgpaActionPerformed

    private void mba_cgpaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mba_cgpaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_mba_cgpaKeyReleased

    private void mba_specialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mba_specialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mba_specialActionPerformed

    private void mba_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mba_searchActionPerformed
        // TODO add your handling code here:
        if(mba_search.isSelected())
        {
            Graduation.setBackground(new Color(0,0,0));
                Graduation.setVisible(true);
        }
    }//GEN-LAST:event_mba_searchActionPerformed

    private void grad_cgpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grad_cgpaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grad_cgpaActionPerformed

    private void grad_cgpaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grad_cgpaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_grad_cgpaKeyReleased

    private void grad_degreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grad_degreeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grad_degreeActionPerformed

    public void search() throws SQLException {
        this.Q = q.getSelectedItem().toString();
        final JFrame frame = new JFrame("Selected Applicants");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Vector<String> columnNames = new Vector<String>();
         columnNames.add("Name");
        columnNames.add("Age");
        columnNames.add("Gender");
        columnNames.add("E-Mail ID");
        columnNames.add("Phone Number");
        columnNames.add("HSS Marks");
        columnNames.add("SSS Marks");
        columnNames.add("");
     String query =
                "select name,age,gender,email_id,phone_num,hss_percent,sss_percent from resume1 where qualification='" + Q + "'";


    try {
            setConnections();
                     ps=con.prepareStatement(query);
       ResultSet  rs=ps.executeQuery();
        while (rs.next()) {

                Vector<String> vstring = new Vector<String>();


                 vstring.add(rs.getString("name"));
                vstring.add(rs.getString("age"));
                vstring.add(rs.getString("gender"));
                vstring.add(rs.getString("email_id"));
                vstring.add(rs.getString("phone_num"));
                vstring.add(rs.getString("hss_percent"));
                vstring.add(rs.getString("sss_percent"));
                 vstring.add("Contact Applicant");

                data.add(vstring);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException ex) {
                  }
            }
        }

    final JTable table;
    table = new JTable(data, columnNames)
            {
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
    }
};

    table.setCellSelectionEnabled(true);
    
    ListSelectionModel cellSelectionModel = table.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        

        int[] selectedRow = table.getSelectedRows();
        
        for (int i = 0; i < selectedRow.length; i++) {
            Email = (String) table.getValueAt(selectedRow[i],3);
          }
          
            frame.dispose();
            new Contact().setVisible(true);
        System.out.println("Selected: " + Email);
      }
      public boolean isCellEditable(int rowIndex, int mColIndex) {
        return false;
      }
    

    });

    frame.add(new JScrollPane(table));

    frame.setSize(900, 200);
    frame.setVisible(true);
    }
   
    public void search_b1() throws SQLException {
        Be_cgpa = be_cgpa.getText();
        Be_stream = (String)be_stream.getSelectedItem();
        Trained_lang = (String)trained_lang.getSelectedItem();
        final JFrame frame = new JFrame("Selected Applicants");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Vector<String> columnNames = new Vector<String>();
         columnNames.add("Name");
        columnNames.add("Age");
        columnNames.add("Gender");
        columnNames.add("E-Mail ID");
        columnNames.add("Phone Number");
        columnNames.add("SSS Marks");
        columnNames.add("BE CGPA");
        columnNames.add("");
        String query =("select be_cgpa,name,age,gender,email_id,phone_num,hss_percent,sss_percent from resume1 where qualification='be' and be_cgpa>='" + Be_cgpa + "'" + "and be_stream='"+ Be_stream + "'" + "and training='" + Trained_lang  + "'");


        try {
            setConnections();
                     ps=con.prepareStatement(query);
       ResultSet  rs=ps.executeQuery();

        while (rs.next()) {
                Vector<String> vstring = new Vector<String>();
                 vstring.add(rs.getString("name"));
                vstring.add(rs.getString("age"));
                vstring.add(rs.getString("gender"));
                vstring.add(rs.getString("email_id"));
                vstring.add(rs.getString("phone_num"));
                vstring.add(rs.getString("sss_percent"));
                vstring.add(rs.getString("be_cgpa"));
                 vstring.add("Contact Applicant");

                data.add(vstring);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException ex) {
                  }
            }
        }

    final JTable table;
    table = new JTable(data, columnNames)
            {
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
    }
};

    table.setCellSelectionEnabled(true);
    
    ListSelectionModel cellSelectionModel = table.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        

        int[] selectedRow = table.getSelectedRows();
        
        for (int i = 0; i < selectedRow.length; i++) {
            Email = (String) table.getValueAt(selectedRow[i],3);
          }
             
            frame.dispose();
            new Contact().setVisible(true);
            
        System.out.println("Selected: " + Email);
      }
      public boolean isCellEditable(int rowIndex, int mColIndex) {
        return false;
      }
    

    });

    frame.add(new JScrollPane(table));

    frame.setSize(900, 200);
    frame.setVisible(true);
    }

public void search_b() throws SQLException {
    Be_cgpa = be_cgpa.getText();
    Be_stream = (String)be_stream.getSelectedItem();    
    System.out.println(be_cgpa.getText()+"\n"+be_stream.getSelectedItem());
        final JFrame frame = new JFrame("Selected Applicants");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Vector<String> columnNames = new Vector<String>();
         columnNames.add("Name");
        columnNames.add("Age");
        columnNames.add("Gender");
        columnNames.add("E-Mail ID");
        columnNames.add("Phone Number");
        columnNames.add("SSS Marks");
        columnNames.add("BE CGPA");
        columnNames.add("");
        String query =("select be_cgpa,name,age,gender,email_id,phone_num,hss_percent,sss_percent from resume1 where qualification='be' and be_cgpa>='" + Be_cgpa + "'" + "and be_stream='"+ Be_stream + "'" );

        try {
            setConnections();
                     ps=con.prepareStatement(query);
       ResultSet  rs=ps.executeQuery();

        while (rs.next()) {
System.out.print(rs.getString("name"));
System.out.print(rs.getString("age"));
System.out.print(rs.getString("gender"));
System.out.print(rs.getString("phone_num"));
System.out.print(rs.getString("be_cgpa"));

                Vector<String> vstring = new Vector<String>();


                 vstring.add(rs.getString("name"));
                vstring.add(rs.getString("age"));
                vstring.add(rs.getString("gender"));
                vstring.add(rs.getString("email_id"));
                vstring.add(rs.getString("phone_num"));
                vstring.add(rs.getString("sss_percent"));
                vstring.add(rs.getString("be_cgpa"));
                 vstring.add("Contact Applicant");

                data.add(vstring);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException ex) {
                  }
            }
        }

    final JTable table;
    table = new JTable(data, columnNames)
            {
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
    }
};

    table.setCellSelectionEnabled(true);
    
    ListSelectionModel cellSelectionModel = table.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        

        int[] selectedRow = table.getSelectedRows();
        
        for (int i = 0; i < selectedRow.length; i++) {
            Email = (String) table.getValueAt(selectedRow[i],3);
          }
             
            frame.dispose();new Contact().setVisible(true);
            
        System.out.println("Selected: " + Email);
      }
      public boolean isCellEditable(int rowIndex, int mColIndex) {
        return false;
      }
    

    });

    frame.add(new JScrollPane(table));

    frame.setSize(900, 200);
    frame.setVisible(true);
    }    
    public void search_c1() throws SQLException {
        this.Hss_marks = hss_marks.getText();
        this.Sss_marks = sss_marks.getText();
        this.Sss_stream=sss_stream.getEditor().toString();
     final JFrame frame = new JFrame("Selected Applicants");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Vector<String> columnNames = new Vector<String>();
         columnNames.add("Name");
        columnNames.add("Age");
        columnNames.add("Gender");
        columnNames.add("E-Mail ID");
        columnNames.add("Phone Number");
        columnNames.add("SSS Marks");
        columnNames.add("HSS Marks");
        columnNames.add("");
        String query =("select name,age,gender,email_id,phone_num, hss_percent, sss_percent from resume1 where qualification='Class 12' and hss_percent>='"+ Hss_marks +"'" + "and sss_percent>='" + Sss_marks +"'"+ "and sss_stream ='"+ Sss_stream +"'");


        try {
                setConnections();
                     ps=con.prepareStatement(query);
       ResultSet  rs=ps.executeQuery();
        while (rs.next()) {

        while (rs.next()) {

                Vector<String> vstring = new Vector<String>();


                 vstring.add(rs.getString("name"));
                vstring.add(rs.getString("age"));
                vstring.add(rs.getString("gender"));
                vstring.add(rs.getString("email_id"));
                vstring.add(rs.getString("phone_num"));
                vstring.add(rs.getString("sss_percent"));
                vstring.add(rs.getString("hss_percent"));
                 vstring.add("Contact Applicant");

                data.add(vstring);
            }
        }
        }
         catch (SQLException e) {
            e.printStackTrace();
        } 
         finally {
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException ex) {
                  }
            }
        }

    final JTable table;
    table = new JTable(data, columnNames)
            {
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
    }
};

    table.setCellSelectionEnabled(true);
    
    ListSelectionModel cellSelectionModel = table.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        

        int[] selectedRow = table.getSelectedRows();
        
        for (int i = 0; i < selectedRow.length; i++) {
            Email = (String) table.getValueAt(selectedRow[i],3);
          }
             
            frame.dispose();new Contact().setVisible(true);
            
        System.out.println("Selected: " + Email);
      }
      public boolean isCellEditable(int rowIndex, int mColIndex) {
        return false;
      }
    

    });

    frame.add(new JScrollPane(table));

    frame.setSize(900, 200);
    frame.setVisible(true);
    }

    public void search_c() throws SQLException {
        this.Hss_marks = hss_marks.getText();
        this.Sss_marks = sss_marks.getText();
         final JFrame frame = new JFrame("Selected Applicants");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Vector<String> columnNames = new Vector<String>();
         columnNames.add("Name");
        columnNames.add("Age");
        columnNames.add("Gender");
        columnNames.add("E-Mail ID");
        columnNames.add("Phone Number");
        columnNames.add("SSS Marks");
        columnNames.add("HSS Marks");
        columnNames.add("");
        String query =("select name,age,gender,email_id,phone_num,hss_percent, sss_percent from resume1 where qualification='Class 12' and hss_percent>='"+ Hss_marks +"'" + "and sss_percent>='" + Sss_marks +"'");


        try {
                        setConnections();
                     ps=con.prepareStatement(query);
       ResultSet  rs=ps.executeQuery();
        while (rs.next()) {


                Vector<String> vstring = new Vector<String>();


                 vstring.add(rs.getString("name"));
                vstring.add(rs.getString("age"));
                vstring.add(rs.getString("gender"));
                vstring.add(rs.getString("email_id"));
                vstring.add(rs.getString("phone_num"));
                vstring.add(rs.getString("sss_percent"));
                vstring.add(rs.getString("hss_percent"));
                 vstring.add("Contact Applicant");

                data.add(vstring);
            }
        } 
        catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException ex) {
                  }
            }
        }

    final JTable table;
    table = new JTable(data, columnNames)
            {
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
    }
};

    table.setCellSelectionEnabled(true);
    
    ListSelectionModel cellSelectionModel = table.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        

        int[] selectedRow = table.getSelectedRows();
        
        for (int i = 0; i < selectedRow.length; i++) {
            Email = (String) table.getValueAt(selectedRow[i],3);
          }
             
            frame.dispose();new Contact().setVisible(true);
            
        System.out.println("Selected: " + Email);
      }
      public boolean isCellEditable(int rowIndex, int mColIndex) {
        return false;
      }
    

    });

    frame.add(new JScrollPane(table));

    frame.setSize(900, 200);
    frame.setVisible(true);
    }
  
    public void search_m1() throws SQLException {
        this.Mba_cgpa = mba_cgpa.getText();
        this.Mba_specialisation = mba_special.getEditor().toString();
        this.Grad_cgpa = grad_cgpa.getText();
        this.Grad_stream = grad_degree.getEditor().toString();
         final JFrame frame = new JFrame("Selected Applicants");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Vector<String> columnNames = new Vector<String>();
         columnNames.add("Name");
        columnNames.add("Age");
        columnNames.add("Gender");
        columnNames.add("E-Mail ID");
        columnNames.add("Phone Number");
        columnNames.add("SSS Marks");
        columnNames.add("MBA CGPA");
        columnNames.add("");
        String query =("select name,age,gender,email_id,phone_num,hss_percent,sss_percent, mba_cgpa from resume1 where qualification='mba' and mba_cgpa>='" + Mba_cgpa + "'" + " and mba_specialisation>='" + Mba_specialisation + "'" + "and grad_cgpa>='" + Grad_cgpa + "'" + "and grad_degree>='" + Grad_stream + "'");


        try {
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);
        while (rs.next()) {

                Vector<String> vstring = new Vector<String>();


                 vstring.add(rs.getString("name"));
                vstring.add(rs.getString("age"));
                vstring.add(rs.getString("gender"));
                vstring.add(rs.getString("email_id"));
                vstring.add(rs.getString("phone_num"));
                vstring.add(rs.getString("sss_percent"));
                vstring.add(rs.getString("mba_cgpa"));
                 vstring.add("Contact Applicant");

                data.add(vstring);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException ex) {
                  }
            }
        }

    final JTable table;
    table = new JTable(data, columnNames)
            {
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
    }
};

    table.setCellSelectionEnabled(true);
    
    ListSelectionModel cellSelectionModel = table.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        

        int[] selectedRow = table.getSelectedRows();
        
        for (int i = 0; i < selectedRow.length; i++) {
            Email = (String) table.getValueAt(selectedRow[i],3);
          }
             
            frame.dispose();new Contact().setVisible(true);
            
        System.out.println("Selected: " + Email);
      }
      public boolean isCellEditable(int rowIndex, int mColIndex) {
        return false;
      }
    

    });

    frame.add(new JScrollPane(table));

    frame.setSize(900, 200);
    frame.setVisible(true);
    }
    
    public void search_m() throws SQLException {
        this.Mba_cgpa = mba_cgpa.getText();
        this.Mba_specialisation = mba_special.getEditor().toString();
         final JFrame frame = new JFrame("Selected Applicants");
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Vector<String> columnNames = new Vector<String>();
         columnNames.add("Name");
        columnNames.add("Age");
        columnNames.add("Gender");
        columnNames.add("E-Mail ID");
        columnNames.add("Phone Number");
        columnNames.add("SSS Marks");
        columnNames.add("MBA CGPA");
        columnNames.add("");
        String query =("select name,age,gender,email_id,phone_num,hss_percent,sss_percent,mba_cgpa from resume1 where qualification='mba' and mba_cgpa>='" + Mba_cgpa + "'" + " and mba_specialisation>='" + Mba_specialisation + "'" );

        try {
                       setConnections();
                     ps=con.prepareStatement(query);
       ResultSet  rs=ps.executeQuery();

        while (rs.next()) {

                Vector<String> vstring = new Vector<String>();


                 vstring.add(rs.getString("name"));
                vstring.add(rs.getString("age"));
                vstring.add(rs.getString("gender"));
                vstring.add(rs.getString("email_id"));
                vstring.add(rs.getString("phone_num"));
                vstring.add(rs.getString("sss_marks"));
                vstring.add(rs.getString("mba_cgpa"));
                 vstring.add("Contact Applicant");

                data.add(vstring);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException ex) {
                  }
            }
        }

    final JTable table;
    table = new JTable(data, columnNames)
            {
    public boolean isCellEditable(int rowIndex, int colIndex) {
        return false;   //Disallow the editing of any cell
    }
};

    table.setCellSelectionEnabled(true);
    
    ListSelectionModel cellSelectionModel = table.getSelectionModel();
    cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    cellSelectionModel.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent e) {
        

        int[] selectedRow = table.getSelectedRows();
        
        for (int i = 0; i < selectedRow.length; i++) {
            Email = (String) table.getValueAt(selectedRow[i],3);
          }
             
            frame.dispose();new Contact().setVisible(true);
            
        System.out.println("Selected: " + Email);
      }
      public boolean isCellEditable(int rowIndex, int mColIndex) {
        return false;
      }
    

    });

    frame.add(new JScrollPane(table));

    frame.setSize(900, 200);
    frame.setVisible(true);
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        String Q = (String) q.getSelectedItem();
        if("BE".equals(Q))
        {
            if(search.isSelected())
            {
                if(be_search.isSelected())
                 try {
                     search_b1();
                } catch (SQLException ex) {
                    Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
                }
               else 
                 try {
                     search_b();
                } catch (SQLException ex) {
                    Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else 
                try {
                    search();
            } catch (SQLException ex) {
                Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if("Class 12".equals(Q))
        {
            if(search.isSelected())
            {
                if(cs_search.isSelected())
                 try {
                     search_c1();
                } catch (SQLException ex) {
                    Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
                }
               else 
                 try {
                     search_c();
                } catch (SQLException ex) {
                    Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
                try {
                    search();
            } catch (SQLException ex) {
                Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if("MBA".equals(Q))
        {
            if(search.isSelected())
            {
                if(mba_search.isSelected())
                 try {
                     search_m1();
                } catch (SQLException ex) {
                    Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
                }
               else 
                 try {
                     search_m();
                } catch (SQLException ex) {
                    Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            try {
                search();
            } catch (SQLException ex) {
                Logger.getLogger(Search1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
this.dispose();
new CareerConstructor().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
this.dispose();
       JOptionPane.showMessageDialog(this,"Have a nice day ahead!","Bye. Bye!",JOptionPane.CLOSED_OPTION);
       System.exit(0);

    }//GEN-LAST:event_jButton2ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BE;
    private javax.swing.JPanel BE_1;
    private javax.swing.JPanel C12;
    private javax.swing.JPanel C12_1;
    private javax.swing.JPanel Graduation;
    private javax.swing.JPanel MBA;
    private javax.swing.JTextField be_cgpa;
    private javax.swing.JCheckBox be_search;
    private javax.swing.JComboBox be_stream;
    private javax.swing.JCheckBox cs_search;
    private javax.swing.JTextField grad_cgpa;
    private javax.swing.JComboBox grad_degree;
    private javax.swing.JTextField hss_marks;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField mba_cgpa;
    private javax.swing.JCheckBox mba_search;
    private javax.swing.JComboBox mba_special;
    private javax.swing.JComboBox q;
    private javax.swing.JCheckBox search;
    private javax.swing.JTextField sss_marks;
    private javax.swing.JComboBox sss_stream;
    private javax.swing.JComboBox trained_lang;
    // End of variables declaration//GEN-END:variables
}
